
public class ByteArrayTest {

	// Sending variables
	private static String sendType = "Hi";
	private static boolean sendIsShooting = true;
	private static int sendX = 5, sendY = 10;
	private static int sendRotateInt, sendRotateDecimal;
	private static double sendRotate = 10.213;

	// Receiving variables
	private static String receiveType;
	private static boolean receiveIsShooting;
	private static int receiveX, receiveY;
	private static int receiveRotateInt, receiveRotateDecimal;
	private static double receiveRotate;

	public static void main(String[] args) {

		// Encode the rotation into two ints
		encodeDouble(sendRotate);
		System.out.println(sendRotate);
		System.out.println(sendRotateInt + " | " + sendRotateDecimal);
		System.out.println(decodeDouble(sendRotateInt, sendRotateDecimal));

		// Encode into string
		String send = encodeByteArray(sendType, sendIsShooting, sendX, sendY, sendRotateInt, sendRotateDecimal);

		// Convert to byte array
		byte[] bytes = send.getBytes();

		// Print
		System.out.println(send + " -> " + bytes);

		// Decode
		decodeByteArray(bytes);

		// Print result
		System.out.println("\n\nType: " + receiveType);
		System.out.println("Shooting: " + receiveIsShooting);
		System.out.println("X: " + receiveX);
		System.out.println("Y: " + receiveY);
		System.out.println("Rotate: " + receiveRotate);

	}

	private static String encodeByteArray(String type, boolean isShooting, int x, int y, int rotateInt,
			int rotateDecimal) {
		return type + "," + isShooting + "," + x + "," + y + "," + rotateInt + "," + rotateDecimal;
	}

	private static void decodeByteArray(byte[] input) {
		// Decode into string
		String receivedString = new String(input);

		// Tokenize
		String[] resultArray = receivedString.split(",");

		// Set vars
		receiveType = resultArray[0]; // Type
		receiveIsShooting = Boolean.parseBoolean(resultArray[1]); // isShooting
		receiveX = Integer.parseInt(resultArray[2]); // X Coord
		receiveY = Integer.parseInt(resultArray[3]); // Y coord
		receiveRotateInt = Integer.parseInt(resultArray[4]); // Integer portion of rotate
		receiveRotateDecimal = Integer.parseInt(resultArray[5]); // Decimal portion of rotate
		receiveRotate = decodeDouble(receiveRotateInt, receiveRotateDecimal); // Combining back into a double
	}

	private static void encodeDouble(double num) {
		sendRotateInt = (int) Math.floor(num); // Integer only
		sendRotateDecimal = (int) Math.round((num - sendRotateInt) * 100); // First two decimals
	}

	private static double decodeDouble(double num, double decimal) {
		return num + (decimal / 100); // Turn two integers into a double
	}

}
